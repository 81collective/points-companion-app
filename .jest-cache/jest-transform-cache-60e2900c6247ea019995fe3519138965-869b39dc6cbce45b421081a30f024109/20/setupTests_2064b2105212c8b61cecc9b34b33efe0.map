{"file":"C:\\Users\\Media Server\\Documents\\Projects\\points-companion-app\\src\\test\\setupTests.ts","mappings":"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","names":[],"sources":["C:\\Users\\Media Server\\Documents\\Projects\\points-companion-app\\src\\test\\setupTests.ts"],"sourcesContent":["// Jest setup file for comprehensive testing environment\r\n// Configures mocks, utilities, and test environment\r\n\r\nimport { setupTests } from './testUtils';\r\n\r\n// Setup global test environment\r\nsetupTests();\r\n\r\n// Mock window.matchMedia\r\nObject.defineProperty(window, 'matchMedia', {\r\n  writable: true,\r\n  value: jest.fn().mockImplementation(query => ({\r\n    matches: false,\r\n    media: query,\r\n    onchange: null,\r\n    addListener: jest.fn(), // deprecated\r\n    removeListener: jest.fn(), // deprecated\r\n    addEventListener: jest.fn(),\r\n    removeEventListener: jest.fn(),\r\n    dispatchEvent: jest.fn(),\r\n  })),\r\n});\r\n\r\n// Mock window.ResizeObserver\r\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\r\n  observe: jest.fn(),\r\n  unobserve: jest.fn(),\r\n  disconnect: jest.fn(),\r\n}));\r\n\r\n// Mock window.IntersectionObserver\r\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({\r\n  observe: jest.fn(),\r\n  unobserve: jest.fn(),\r\n  disconnect: jest.fn(),\r\n}));\r\n\r\n// Mock navigator.geolocation\r\nObject.defineProperty(navigator, 'geolocation', {\r\n  value: {\r\n    getCurrentPosition: jest.fn(),\r\n    watchPosition: jest.fn(),\r\n    clearWatch: jest.fn(),\r\n  },\r\n  writable: true,\r\n});\r\n\r\n// Mock navigator.serviceWorker\r\nObject.defineProperty(navigator, 'serviceWorker', {\r\n  value: {\r\n    register: jest.fn(() => Promise.resolve({\r\n      active: { state: 'activated' },\r\n      waiting: null,\r\n      installing: null,\r\n    })),\r\n    addEventListener: jest.fn(),\r\n    removeEventListener: jest.fn(),\r\n  },\r\n  writable: true,\r\n});\r\n\r\n// Mock localStorage\r\nconst localStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n};\r\nObject.defineProperty(window, 'localStorage', {\r\n  value: localStorageMock,\r\n});\r\n\r\n// Mock sessionStorage\r\nconst sessionStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n};\r\nObject.defineProperty(window, 'sessionStorage', {\r\n  value: sessionStorageMock,\r\n});\r\n\r\n// Mock Google Maps API\r\n(global as any).google = {\r\n  maps: {\r\n    Map: jest.fn(),\r\n    Marker: jest.fn(),\r\n    InfoWindow: jest.fn(),\r\n    PlacesService: jest.fn(),\r\n    PlacesServiceStatus: {\r\n      OK: 'OK',\r\n      ZERO_RESULTS: 'ZERO_RESULTS',\r\n      OVER_QUERY_LIMIT: 'OVER_QUERY_LIMIT',\r\n      REQUEST_DENIED: 'REQUEST_DENIED',\r\n      INVALID_REQUEST: 'INVALID_REQUEST',\r\n    },\r\n  },\r\n};\r\n\r\n// Mock fetch API\r\nglobal.fetch = jest.fn();\r\n\r\n// Mock console methods for cleaner test output\r\nconst originalConsoleError = console.error;\r\nconst originalConsoleWarn = console.warn;\r\n\r\nbeforeAll(() => {\r\n  console.error = jest.fn();\r\n  console.warn = jest.fn();\r\n});\r\n\r\nafterAll(() => {\r\n  console.error = originalConsoleError;\r\n  console.warn = originalConsoleWarn;\r\n});\r\n\r\n// Mock performance API\r\nglobal.performance.mark = jest.fn();\r\nglobal.performance.measure = jest.fn();\r\nglobal.performance.getEntriesByName = jest.fn(() => []);\r\nglobal.performance.clearMarks = jest.fn();\r\nglobal.performance.clearMeasures = jest.fn();\r\n\r\n// Mock requestAnimationFrame\r\nglobal.requestAnimationFrame = jest.fn(cb => setTimeout(cb, 16));\r\nglobal.cancelAnimationFrame = jest.fn();\r\n\r\n// Mock requestIdleCallback\r\nglobal.requestIdleCallback = jest.fn(cb => setTimeout(cb, 1));\r\nglobal.cancelIdleCallback = jest.fn();\r\n\r\n// Cleanup after each test\r\nafterEach(() => {\r\n  jest.clearAllMocks();\r\n  jest.clearAllTimers();\r\n});\r\n\r\n// Global test utilities\r\n(global as any).testUtils = {\r\n  // Helper to wait for async operations\r\n  waitForAsync: () => new Promise(resolve => setImmediate(resolve)),\r\n\r\n  // Helper to create mock promises\r\n  createMockPromise: <T>(value: T, delay = 0) =>\r\n    new Promise<T>(resolve => setTimeout(() => resolve(value), delay)),\r\n\r\n  // Helper to create mock rejections\r\n  createMockRejection: (error: Error, delay = 0) =>\r\n    new Promise((_, reject) => setTimeout(() => reject(error), delay)),\r\n};\r\n\r\n// Performance testing utilities\r\n(global as any).performanceUtils = {\r\n  // Measure function execution time\r\n  measureExecutionTime: async <T>(fn: () => Promise<T> | T): Promise<{ result: T; duration: number }> => {\r\n    const start = performance.now();\r\n    const result = await fn();\r\n    const duration = performance.now() - start;\r\n    return { result, duration };\r\n  },\r\n\r\n  // Assert performance threshold\r\n  assertPerformance: (duration: number, threshold: number) => {\r\n    if (duration > threshold) {\r\n      throw new Error(`Performance test failed: ${duration}ms exceeded threshold of ${threshold}ms`);\r\n    }\r\n  },\r\n};\r\n\r\n// Memory testing utilities\r\n(global as any).memoryUtils = {\r\n  // Get current memory usage\r\n  getMemoryUsage: () => {\r\n    if ('memory' in performance) {\r\n      return (performance as any).memory;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Assert memory usage is within limits\r\n  assertMemoryUsage: (maxHeapUsed: number) => {\r\n    const memory = (global as any).memoryUtils.getMemoryUsage();\r\n    if (memory && memory.usedJSHeapSize > maxHeapUsed) {\r\n      throw new Error(`Memory usage test failed: ${memory.usedJSHeapSize} exceeded limit of ${maxHeapUsed}`);\r\n    }\r\n  },\r\n};\r\n\r\n// Accessibility testing utilities\r\n(global as any).a11yUtils = {\r\n  // Check if element has proper ARIA attributes\r\n  hasAriaAttributes: (element: HTMLElement) => {\r\n    const ariaAttributes = [\r\n      'aria-label',\r\n      'aria-labelledby',\r\n      'aria-describedby',\r\n      'aria-expanded',\r\n      'aria-selected',\r\n      'role',\r\n    ];\r\n\r\n    return ariaAttributes.some(attr => element.hasAttribute(attr));\r\n  },\r\n\r\n  // Check if element is keyboard accessible\r\n  isKeyboardAccessible: (element: HTMLElement) => {\r\n    const tabIndex = element.getAttribute('tabindex');\r\n    const tagName = element.tagName.toLowerCase();\r\n\r\n    return (\r\n      tabIndex !== '-1' &&\r\n      (tabIndex !== null || ['button', 'input', 'select', 'textarea', 'a'].includes(tagName))\r\n    );\r\n  },\r\n};\r\n\r\n// Network testing utilities\r\n(global as any).networkUtils = {\r\n  // Mock successful API response\r\n  mockApiSuccess: (data: any, status = 200) => {\r\n    (global.fetch as jest.Mock).mockResolvedValueOnce({\r\n      ok: true,\r\n      status,\r\n      json: () => Promise.resolve(data),\r\n      text: () => Promise.resolve(JSON.stringify(data)),\r\n    });\r\n  },\r\n\r\n  // Mock failed API response\r\n  mockApiError: (error: Error, status = 500) => {\r\n    (global.fetch as jest.Mock).mockRejectedValueOnce(error);\r\n  },\r\n\r\n  // Mock network timeout\r\n  mockNetworkTimeout: (delay = 5000) => {\r\n    (global.fetch as jest.Mock).mockImplementationOnce(\r\n      () => new Promise((_, reject) =>\r\n        setTimeout(() => reject(new Error('Network timeout')), delay)\r\n      )\r\n    );\r\n  },\r\n};\r\n\r\n// Mock environment variables\r\ndelete (process.env as any).NODE_ENV;\r\n(process.env as any).NODE_ENV = 'test';\r\n(process.env as any).REACT_APP_API_URL = 'http://localhost:3001';\r\n(process.env as any).REACT_APP_GOOGLE_MAPS_API_KEY = 'test-api-key';\r\n\r\n// Export for use in tests\r\nexport {};\r\nglobal.testUtils = {\r\n  // Helper to wait for async operations\r\n  waitForAsync: () => new Promise(resolve => setImmediate(resolve)),\r\n\r\n  // Helper to create mock promises\r\n  createMockPromise: <T>(value: T, delay = 0) =>\r\n    new Promise<T>(resolve => setTimeout(() => resolve(value), delay)),\r\n\r\n  // Helper to create mock rejections\r\n  createMockRejection: (error: Error, delay = 0) =>\r\n    new Promise((_, reject) => setTimeout(() => reject(error), delay)),\r\n};\r\n\r\n// Performance testing utilities\r\nglobal.performanceUtils = {\r\n  // Measure function execution time\r\n  measureExecutionTime: async <T>(fn: () => Promise<T> | T): Promise<{ result: T; duration: number }> => {\r\n    const start = performance.now();\r\n    const result = await fn();\r\n    const duration = performance.now() - start;\r\n    return { result, duration };\r\n  },\r\n\r\n  // Assert performance threshold\r\n  assertPerformance: (duration: number, threshold: number) => {\r\n    if (duration > threshold) {\r\n      throw new Error(`Performance test failed: ${duration}ms exceeded threshold of ${threshold}ms`);\r\n    }\r\n  },\r\n};\r\n\r\n// Memory testing utilities\r\nglobal.memoryUtils = {\r\n  // Get current memory usage\r\n  getMemoryUsage: () => {\r\n    if ('memory' in performance) {\r\n      return (performance as any).memory;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Assert memory usage is within limits\r\n  assertMemoryUsage: (maxHeapUsed: number) => {\r\n    const memory = global.memoryUtils.getMemoryUsage();\r\n    if (memory && memory.usedJSHeapSize > maxHeapUsed) {\r\n      throw new Error(`Memory usage test failed: ${memory.usedJSHeapSize} exceeded limit of ${maxHeapUsed}`);\r\n    }\r\n  },\r\n};\r\n\r\n// Accessibility testing utilities\r\nglobal.a11yUtils = {\r\n  // Check if element has proper ARIA attributes\r\n  hasAriaAttributes: (element: HTMLElement) => {\r\n    const ariaAttributes = [\r\n      'aria-label',\r\n      'aria-labelledby',\r\n      'aria-describedby',\r\n      'aria-expanded',\r\n      'aria-selected',\r\n      'role',\r\n    ];\r\n\r\n    return ariaAttributes.some(attr => element.hasAttribute(attr));\r\n  },\r\n\r\n  // Check if element is keyboard accessible\r\n  isKeyboardAccessible: (element: HTMLElement) => {\r\n    const tabIndex = element.getAttribute('tabindex');\r\n    const tagName = element.tagName.toLowerCase();\r\n\r\n    return (\r\n      tabIndex !== '-1' &&\r\n      (tabIndex !== null || ['button', 'input', 'select', 'textarea', 'a'].includes(tagName))\r\n    );\r\n  },\r\n};\r\n\r\n// Network testing utilities\r\nglobal.networkUtils = {\r\n  // Mock successful API response\r\n  mockApiSuccess: (data: any, status = 200) => {\r\n    (global.fetch as jest.Mock).mockResolvedValueOnce({\r\n      ok: true,\r\n      status,\r\n      json: () => Promise.resolve(data),\r\n      text: () => Promise.resolve(JSON.stringify(data)),\r\n    });\r\n  },\r\n\r\n  // Mock failed API response\r\n  mockApiError: (error: Error, status = 500) => {\r\n    (global.fetch as jest.Mock).mockRejectedValueOnce(error);\r\n  },\r\n\r\n  // Mock network timeout\r\n  mockNetworkTimeout: (delay = 5000) => {\r\n    (global.fetch as jest.Mock).mockImplementationOnce(\r\n      () => new Promise((_, reject) =>\r\n        setTimeout(() => reject(new Error('Network timeout')), delay)\r\n      )\r\n    );\r\n  },\r\n};\r\n\r\n// Extend global types for test utilities\r\ndeclare global {\r\n  var testUtils: {\r\n    waitForAsync: () => Promise<void>;\r\n    createMockPromise: <T>(value: T, delay?: number) => Promise<T>;\r\n    createMockRejection: (error: Error, delay?: number) => Promise<never>;\r\n  };\r\n\r\n  var performanceUtils: {\r\n    measureExecutionTime: <T>(fn: () => Promise<T> | T) => Promise<{ result: T; duration: number }>;\r\n    assertPerformance: (duration: number, threshold: number) => void;\r\n  };\r\n\r\n  var memoryUtils: {\r\n    getMemoryUsage: () => any;\r\n    assertMemoryUsage: (maxHeapUsed: number) => void;\r\n  };\r\n\r\n  var a11yUtils: {\r\n    hasAriaAttributes: (element: HTMLElement) => boolean;\r\n    isKeyboardAccessible: (element: HTMLElement) => boolean;\r\n  };\r\n\r\n  var networkUtils: {\r\n    mockApiSuccess: (data: any, status?: number) => void;\r\n    mockApiError: (error: Error, status?: number) => void;\r\n    mockNetworkTimeout: (delay?: number) => void;\r\n  };\r\n}\r\n"],"version":3}