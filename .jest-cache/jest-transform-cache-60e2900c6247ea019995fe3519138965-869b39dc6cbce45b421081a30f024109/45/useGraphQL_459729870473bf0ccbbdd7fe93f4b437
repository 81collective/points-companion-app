60b3e2b2ce304497b2e520c4217ac786
"use strict";

exports.__esModule = true;
exports.NEARBY_BUSINESSES_QUERY = exports.BUSINESS_DETAILS_QUERY = exports.BUSINESSES_QUERY = void 0;
exports.useBusinessDetailsQuery = useBusinessDetailsQuery;
exports.useBusinessesQuery = useBusinessesQuery;
exports.useNearbyBusinessesQuery = useNearbyBusinessesQuery;
var _core = require("@apollo/client/core");
var _react = require("@apollo/client/react");
// Query documents exported for testing with MockedProvider
const BUSINESSES_QUERY = exports.BUSINESSES_QUERY = (0, _core.gql)`
  query Businesses($limit: Int, $category: String) {
    businesses(limit: $limit, category: $category) {
      id
      name
      category
  address
  latitude
  longitude
  rating
  priceLevel
  distance
  placeId
    }
  }
`;
const BUSINESS_DETAILS_QUERY = exports.BUSINESS_DETAILS_QUERY = (0, _core.gql)`
  query BusinessDetails($id: ID!) {
    business(id: $id) {
      id
      name
  address
      rating
  priceLevel
  distance
  category
  placeId
  latitude
  longitude
  reviews { id author rating text time }
  photos { id url width height }
  hours { monday tuesday wednesday thursday friday saturday sunday }
    }
  }
`;
const NEARBY_BUSINESSES_QUERY = exports.NEARBY_BUSINESSES_QUERY = (0, _core.gql)`
  query NearbyBusinesses($lat: Float!, $lng: Float!, $radius: Int) {
    nearbyBusinesses(lat: $lat, lng: $lng, radius: $radius) {
      id
      name
      distance
  latitude
  longitude
    }
  }
`;
function useBusinessesQuery(variables) {
  // Standard Apollo signature: useQuery(query, options)
  return (0, _react.useQuery)(BUSINESSES_QUERY, {
    variables
  });
}
function useBusinessDetailsQuery(idOrVars) {
  const variables = typeof idOrVars === 'string' ? {
    id: idOrVars
  } : idOrVars;
  return (0, _react.useQuery)(BUSINESS_DETAILS_QUERY, {
    variables,
    skip: !variables?.id
  });
}
function useNearbyBusinessesQuery(variables) {
  const normalized = 'lat' in variables ? variables : {
    lat: variables.latitude,
    lng: variables.longitude,
    radius: variables.radius,
    category: variables.category
  };
  const raw = (0, _react.useQuery)(NEARBY_BUSINESSES_QUERY, {
    variables: normalized,
    skip: !normalized?.lat || !normalized?.lng
  });

  // Sort nearbyBusinesses by distance ascending if present
  const sorted = raw && raw.data && Array.isArray(raw.data.nearbyBusinesses) ? {
    ...raw,
    data: {
      ...raw.data,
      nearbyBusinesses: [...raw.data.nearbyBusinesses].sort((a, b) => (a?.distance ?? 0) - (b?.distance ?? 0))
    }
  } : raw;
  return sorted;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJfcmVhY3QiLCJCVVNJTkVTU0VTX1FVRVJZIiwiZXhwb3J0cyIsImdxbCIsIkJVU0lORVNTX0RFVEFJTFNfUVVFUlkiLCJORUFSQllfQlVTSU5FU1NFU19RVUVSWSIsInVzZUJ1c2luZXNzZXNRdWVyeSIsInZhcmlhYmxlcyIsInVzZVF1ZXJ5IiwidXNlQnVzaW5lc3NEZXRhaWxzUXVlcnkiLCJpZE9yVmFycyIsImlkIiwic2tpcCIsInVzZU5lYXJieUJ1c2luZXNzZXNRdWVyeSIsIm5vcm1hbGl6ZWQiLCJsYXQiLCJsYXRpdHVkZSIsImxuZyIsImxvbmdpdHVkZSIsInJhZGl1cyIsImNhdGVnb3J5IiwicmF3Iiwic29ydGVkIiwiZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsIm5lYXJieUJ1c2luZXNzZXMiLCJzb3J0IiwiYSIsImIiLCJkaXN0YW5jZSJdLCJzb3VyY2VzIjpbInVzZUdyYXBoUUwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnQGFwb2xsby9jbGllbnQvY29yZSc7XHJcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSAnQGFwb2xsby9jbGllbnQvcmVhY3QnO1xyXG5cclxuLy8gUXVlcnkgZG9jdW1lbnRzIGV4cG9ydGVkIGZvciB0ZXN0aW5nIHdpdGggTW9ja2VkUHJvdmlkZXJcclxuZXhwb3J0IGNvbnN0IEJVU0lORVNTRVNfUVVFUlkgPSBncWxgXHJcbiAgcXVlcnkgQnVzaW5lc3NlcygkbGltaXQ6IEludCwgJGNhdGVnb3J5OiBTdHJpbmcpIHtcclxuICAgIGJ1c2luZXNzZXMobGltaXQ6ICRsaW1pdCwgY2F0ZWdvcnk6ICRjYXRlZ29yeSkge1xyXG4gICAgICBpZFxyXG4gICAgICBuYW1lXHJcbiAgICAgIGNhdGVnb3J5XHJcbiAgYWRkcmVzc1xyXG4gIGxhdGl0dWRlXHJcbiAgbG9uZ2l0dWRlXHJcbiAgcmF0aW5nXHJcbiAgcHJpY2VMZXZlbFxyXG4gIGRpc3RhbmNlXHJcbiAgcGxhY2VJZFxyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBCVVNJTkVTU19ERVRBSUxTX1FVRVJZID0gZ3FsYFxyXG4gIHF1ZXJ5IEJ1c2luZXNzRGV0YWlscygkaWQ6IElEISkge1xyXG4gICAgYnVzaW5lc3MoaWQ6ICRpZCkge1xyXG4gICAgICBpZFxyXG4gICAgICBuYW1lXHJcbiAgYWRkcmVzc1xyXG4gICAgICByYXRpbmdcclxuICBwcmljZUxldmVsXHJcbiAgZGlzdGFuY2VcclxuICBjYXRlZ29yeVxyXG4gIHBsYWNlSWRcclxuICBsYXRpdHVkZVxyXG4gIGxvbmdpdHVkZVxyXG4gIHJldmlld3MgeyBpZCBhdXRob3IgcmF0aW5nIHRleHQgdGltZSB9XHJcbiAgcGhvdG9zIHsgaWQgdXJsIHdpZHRoIGhlaWdodCB9XHJcbiAgaG91cnMgeyBtb25kYXkgdHVlc2RheSB3ZWRuZXNkYXkgdGh1cnNkYXkgZnJpZGF5IHNhdHVyZGF5IHN1bmRheSB9XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IE5FQVJCWV9CVVNJTkVTU0VTX1FVRVJZID0gZ3FsYFxyXG4gIHF1ZXJ5IE5lYXJieUJ1c2luZXNzZXMoJGxhdDogRmxvYXQhLCAkbG5nOiBGbG9hdCEsICRyYWRpdXM6IEludCkge1xyXG4gICAgbmVhcmJ5QnVzaW5lc3NlcyhsYXQ6ICRsYXQsIGxuZzogJGxuZywgcmFkaXVzOiAkcmFkaXVzKSB7XHJcbiAgICAgIGlkXHJcbiAgICAgIG5hbWVcclxuICAgICAgZGlzdGFuY2VcclxuICBsYXRpdHVkZVxyXG4gIGxvbmdpdHVkZVxyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VCdXNpbmVzc2VzUXVlcnkoXHJcbiAgdmFyaWFibGVzPzogeyBsaW1pdD86IG51bWJlcjsgY2F0ZWdvcnk/OiBzdHJpbmc7IG9mZnNldD86IG51bWJlciB9XHJcbikge1xyXG4gIC8vIFN0YW5kYXJkIEFwb2xsbyBzaWduYXR1cmU6IHVzZVF1ZXJ5KHF1ZXJ5LCBvcHRpb25zKVxyXG4gIHJldHVybiAodXNlUXVlcnkgYXMgYW55KShCVVNJTkVTU0VTX1FVRVJZLCB7IHZhcmlhYmxlcyB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUJ1c2luZXNzRGV0YWlsc1F1ZXJ5KGlkT3JWYXJzOiBzdHJpbmcgfCB7IGlkOiBzdHJpbmcgfSkge1xyXG4gIGNvbnN0IHZhcmlhYmxlcyA9IHR5cGVvZiBpZE9yVmFycyA9PT0gJ3N0cmluZycgPyB7IGlkOiBpZE9yVmFycyB9IDogaWRPclZhcnM7XHJcbiAgcmV0dXJuICh1c2VRdWVyeSBhcyBhbnkpKEJVU0lORVNTX0RFVEFJTFNfUVVFUlksIHsgdmFyaWFibGVzLCBza2lwOiAhdmFyaWFibGVzPy5pZCB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZU5lYXJieUJ1c2luZXNzZXNRdWVyeShcclxuICB2YXJpYWJsZXM6XHJcbiAgICB8IHsgbGF0OiBudW1iZXI7IGxuZzogbnVtYmVyOyByYWRpdXM/OiBudW1iZXI7IGNhdGVnb3J5Pzogc3RyaW5nIH1cclxuICAgIHwgeyBsYXRpdHVkZTogbnVtYmVyOyBsb25naXR1ZGU6IG51bWJlcjsgcmFkaXVzPzogbnVtYmVyOyBjYXRlZ29yeT86IHN0cmluZyB9XHJcbikge1xyXG4gIGNvbnN0IG5vcm1hbGl6ZWQgPSAnbGF0JyBpbiB2YXJpYWJsZXNcclxuICAgID8gdmFyaWFibGVzXHJcbiAgICA6IHsgbGF0OiAodmFyaWFibGVzIGFzIGFueSkubGF0aXR1ZGUsIGxuZzogKHZhcmlhYmxlcyBhcyBhbnkpLmxvbmdpdHVkZSwgcmFkaXVzOiAodmFyaWFibGVzIGFzIGFueSkucmFkaXVzLCBjYXRlZ29yeTogKHZhcmlhYmxlcyBhcyBhbnkpLmNhdGVnb3J5IH07XHJcblxyXG4gIGNvbnN0IHJhdyA9ICh1c2VRdWVyeSBhcyBhbnkpKE5FQVJCWV9CVVNJTkVTU0VTX1FVRVJZLCB7IHZhcmlhYmxlczogbm9ybWFsaXplZCwgc2tpcDogIW5vcm1hbGl6ZWQ/LmxhdCB8fCAhbm9ybWFsaXplZD8ubG5nIH0pO1xyXG5cclxuICAvLyBTb3J0IG5lYXJieUJ1c2luZXNzZXMgYnkgZGlzdGFuY2UgYXNjZW5kaW5nIGlmIHByZXNlbnRcclxuICBjb25zdCBzb3J0ZWQgPSByYXcgJiYgcmF3LmRhdGEgJiYgQXJyYXkuaXNBcnJheShyYXcuZGF0YS5uZWFyYnlCdXNpbmVzc2VzKVxyXG4gICAgPyB7XHJcbiAgICAgICAgLi4ucmF3LFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIC4uLnJhdy5kYXRhLFxyXG4gICAgICAgICAgbmVhcmJ5QnVzaW5lc3NlczogWy4uLnJhdy5kYXRhLm5lYXJieUJ1c2luZXNzZXNdLnNvcnQoKGE6IGFueSwgYjogYW55KSA9PiAoYT8uZGlzdGFuY2UgPz8gMCkgLSAoYj8uZGlzdGFuY2UgPz8gMCkpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICA6IHJhdztcclxuICByZXR1cm4gc29ydGVkO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUQsT0FBQTtBQUVBO0FBQ08sTUFBTUUsZ0JBQWdCLEdBQUFDLE9BQUEsQ0FBQUQsZ0JBQUEsR0FBRyxJQUFBRSxTQUFHO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBRU0sTUFBTUMsc0JBQXNCLEdBQUFGLE9BQUEsQ0FBQUUsc0JBQUEsR0FBRyxJQUFBRCxTQUFHO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBRU0sTUFBTUUsdUJBQXVCLEdBQUFILE9BQUEsQ0FBQUcsdUJBQUEsR0FBRyxJQUFBRixTQUFHO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFFTSxTQUFTRyxrQkFBa0JBLENBQ2hDQyxTQUFrRSxFQUNsRTtFQUNBO0VBQ0EsT0FBTyxJQUFDQyxlQUFRLEVBQVNQLGdCQUFnQixFQUFFO0lBQUVNO0VBQVUsQ0FBQyxDQUFDO0FBQzNEO0FBRU8sU0FBU0UsdUJBQXVCQSxDQUFDQyxRQUFpQyxFQUFFO0VBQ3pFLE1BQU1ILFNBQVMsR0FBRyxPQUFPRyxRQUFRLEtBQUssUUFBUSxHQUFHO0lBQUVDLEVBQUUsRUFBRUQ7RUFBUyxDQUFDLEdBQUdBLFFBQVE7RUFDNUUsT0FBTyxJQUFDRixlQUFRLEVBQVNKLHNCQUFzQixFQUFFO0lBQUVHLFNBQVM7SUFBRUssSUFBSSxFQUFFLENBQUNMLFNBQVMsRUFBRUk7RUFBRyxDQUFDLENBQUM7QUFDdkY7QUFFTyxTQUFTRSx3QkFBd0JBLENBQ3RDTixTQUUrRSxFQUMvRTtFQUNBLE1BQU1PLFVBQVUsR0FBRyxLQUFLLElBQUlQLFNBQVMsR0FDakNBLFNBQVMsR0FDVDtJQUFFUSxHQUFHLEVBQUdSLFNBQVMsQ0FBU1MsUUFBUTtJQUFFQyxHQUFHLEVBQUdWLFNBQVMsQ0FBU1csU0FBUztJQUFFQyxNQUFNLEVBQUdaLFNBQVMsQ0FBU1ksTUFBTTtJQUFFQyxRQUFRLEVBQUdiLFNBQVMsQ0FBU2E7RUFBUyxDQUFDO0VBRXJKLE1BQU1DLEdBQUcsR0FBRyxJQUFDYixlQUFRLEVBQVNILHVCQUF1QixFQUFFO0lBQUVFLFNBQVMsRUFBRU8sVUFBVTtJQUFFRixJQUFJLEVBQUUsQ0FBQ0UsVUFBVSxFQUFFQyxHQUFHLElBQUksQ0FBQ0QsVUFBVSxFQUFFRztFQUFJLENBQUMsQ0FBQzs7RUFFN0g7RUFDQSxNQUFNSyxNQUFNLEdBQUdELEdBQUcsSUFBSUEsR0FBRyxDQUFDRSxJQUFJLElBQUlDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSixHQUFHLENBQUNFLElBQUksQ0FBQ0csZ0JBQWdCLENBQUMsR0FDdEU7SUFDRSxHQUFHTCxHQUFHO0lBQ05FLElBQUksRUFBRTtNQUNKLEdBQUdGLEdBQUcsQ0FBQ0UsSUFBSTtNQUNYRyxnQkFBZ0IsRUFBRSxDQUFDLEdBQUdMLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDRyxnQkFBZ0IsQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBQ0MsQ0FBTSxFQUFFQyxDQUFNLEtBQUssQ0FBQ0QsQ0FBQyxFQUFFRSxRQUFRLElBQUksQ0FBQyxLQUFLRCxDQUFDLEVBQUVDLFFBQVEsSUFBSSxDQUFDLENBQUM7SUFDbkg7RUFDRixDQUFDLEdBQ0RULEdBQUc7RUFDUCxPQUFPQyxNQUFNO0FBQ2YiLCJpZ25vcmVMaXN0IjpbXX0=