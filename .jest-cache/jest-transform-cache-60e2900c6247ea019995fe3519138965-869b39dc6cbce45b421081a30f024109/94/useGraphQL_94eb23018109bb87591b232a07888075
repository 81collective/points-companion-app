730ebcc7ea0608477a6496196fca0331
"use strict";

exports.__esModule = true;
exports.NEARBY_BUSINESSES_QUERY = exports.BUSINESS_DETAILS_QUERY = exports.BUSINESSES_QUERY = void 0;
exports.useBusinessDetailsQuery = useBusinessDetailsQuery;
exports.useBusinessesQuery = useBusinessesQuery;
exports.useNearbyBusinessesQuery = useNearbyBusinessesQuery;
var _core = require("@apollo/client/core");
var _react = require("@apollo/client/react");
// Types for GraphQL data and variables

// Query documents exported for testing with MockedProvider
const BUSINESSES_QUERY = exports.BUSINESSES_QUERY = (0, _core.gql)`
  query Businesses($limit: Int, $category: String, $offset: Int) {
    businesses(limit: $limit, category: $category, offset: $offset) {
      id
      name
      category
  address
  latitude
  longitude
  rating
  priceLevel
  distance
  placeId
    }
  }
`;
const BUSINESS_DETAILS_QUERY = exports.BUSINESS_DETAILS_QUERY = (0, _core.gql)`
  query BusinessDetails($id: ID!) {
    business(id: $id) {
      id
      name
  address
      rating
  priceLevel
  distance
  category
  placeId
  latitude
  longitude
  reviews { id author rating text time }
  photos { id url width height }
  hours { monday tuesday wednesday thursday friday saturday sunday }
    }
  }
`;
const NEARBY_BUSINESSES_QUERY = exports.NEARBY_BUSINESSES_QUERY = (0, _core.gql)`
  query NearbyBusinesses($lat: Float!, $lng: Float!, $radius: Int, $category: String) {
    nearbyBusinesses(lat: $lat, lng: $lng, radius: $radius, category: $category) {
      id
      name
      distance
  latitude
  longitude
    }
  }
`;
function useBusinessesQuery(variables) {
  // Standard Apollo signature: useQuery(query, options)
  return (0, _react.useQuery)(BUSINESSES_QUERY, {
    variables
  });
}
function useBusinessDetailsQuery(idOrVars) {
  const variables = typeof idOrVars === 'string' ? {
    id: idOrVars
  } : idOrVars;
  return (0, _react.useQuery)(BUSINESS_DETAILS_QUERY, {
    variables,
    skip: !variables.id
  });
}
function useNearbyBusinessesQuery(variables) {
  const normalized = 'lat' in variables ? variables : {
    lat: variables.latitude,
    lng: variables.longitude,
    radius: variables.radius,
    category: variables.category
  };
  const raw = (0, _react.useQuery)(NEARBY_BUSINESSES_QUERY, {
    variables: normalized,
    skip: !normalized.lat || !normalized.lng
  });

  // Sort nearbyBusinesses by distance ascending if present
  if (raw.data && Array.isArray(raw.data.nearbyBusinesses)) {
    const data = {
      ...raw.data,
      nearbyBusinesses: [...raw.data.nearbyBusinesses].sort((a, b) => (a.distance ?? 0) - (b.distance ?? 0))
    };
    return {
      ...raw,
      data
    };
  }
  return raw;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJfcmVhY3QiLCJCVVNJTkVTU0VTX1FVRVJZIiwiZXhwb3J0cyIsImdxbCIsIkJVU0lORVNTX0RFVEFJTFNfUVVFUlkiLCJORUFSQllfQlVTSU5FU1NFU19RVUVSWSIsInVzZUJ1c2luZXNzZXNRdWVyeSIsInZhcmlhYmxlcyIsInVzZVF1ZXJ5IiwidXNlQnVzaW5lc3NEZXRhaWxzUXVlcnkiLCJpZE9yVmFycyIsImlkIiwic2tpcCIsInVzZU5lYXJieUJ1c2luZXNzZXNRdWVyeSIsIm5vcm1hbGl6ZWQiLCJsYXQiLCJsYXRpdHVkZSIsImxuZyIsImxvbmdpdHVkZSIsInJhZGl1cyIsImNhdGVnb3J5IiwicmF3IiwiZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsIm5lYXJieUJ1c2luZXNzZXMiLCJzb3J0IiwiYSIsImIiLCJkaXN0YW5jZSJdLCJzb3VyY2VzIjpbInVzZUdyYXBoUUwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnQGFwb2xsby9jbGllbnQvY29yZSc7XHJcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSAnQGFwb2xsby9jbGllbnQvcmVhY3QnO1xyXG5cclxuLy8gVHlwZXMgZm9yIEdyYXBoUUwgZGF0YSBhbmQgdmFyaWFibGVzXHJcbmV4cG9ydCB0eXBlIEJ1c2luZXNzID0ge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIGNhdGVnb3J5Pzogc3RyaW5nO1xyXG4gIGFkZHJlc3M/OiBzdHJpbmc7XHJcbiAgbGF0aXR1ZGU/OiBudW1iZXI7XHJcbiAgbG9uZ2l0dWRlPzogbnVtYmVyO1xyXG4gIHJhdGluZz86IG51bWJlcjtcclxuICBwcmljZUxldmVsPzogbnVtYmVyO1xyXG4gIGRpc3RhbmNlPzogbnVtYmVyO1xyXG4gIHBsYWNlSWQ/OiBzdHJpbmc7XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBSZXZpZXcgPSB7IGlkOiBzdHJpbmc7IGF1dGhvcj86IHN0cmluZzsgcmF0aW5nPzogbnVtYmVyOyB0ZXh0Pzogc3RyaW5nOyB0aW1lPzogc3RyaW5nIH07XHJcbmV4cG9ydCB0eXBlIFBob3RvID0geyBpZDogc3RyaW5nOyB1cmw/OiBzdHJpbmc7IHdpZHRoPzogbnVtYmVyOyBoZWlnaHQ/OiBudW1iZXIgfTtcclxuZXhwb3J0IHR5cGUgSG91cnMgPSB7XHJcbiAgbW9uZGF5Pzogc3RyaW5nO1xyXG4gIHR1ZXNkYXk/OiBzdHJpbmc7XHJcbiAgd2VkbmVzZGF5Pzogc3RyaW5nO1xyXG4gIHRodXJzZGF5Pzogc3RyaW5nO1xyXG4gIGZyaWRheT86IHN0cmluZztcclxuICBzYXR1cmRheT86IHN0cmluZztcclxuICBzdW5kYXk/OiBzdHJpbmc7XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBCdXNpbmVzc2VzVmFyaWFibGVzID0geyBsaW1pdD86IG51bWJlcjsgY2F0ZWdvcnk/OiBzdHJpbmc7IG9mZnNldD86IG51bWJlciB9O1xyXG5leHBvcnQgdHlwZSBCdXNpbmVzc2VzRGF0YSA9IHsgYnVzaW5lc3NlczogQnVzaW5lc3NbXSB9O1xyXG5cclxuZXhwb3J0IHR5cGUgQnVzaW5lc3NEZXRhaWxzVmFyaWFibGVzID0geyBpZDogc3RyaW5nIH07XHJcbmV4cG9ydCB0eXBlIEJ1c2luZXNzRGV0YWlscyA9IEJ1c2luZXNzICYgeyByZXZpZXdzPzogUmV2aWV3W107IHBob3Rvcz86IFBob3RvW107IGhvdXJzPzogSG91cnMgfTtcclxuZXhwb3J0IHR5cGUgQnVzaW5lc3NEZXRhaWxzRGF0YSA9IHsgYnVzaW5lc3M6IEJ1c2luZXNzRGV0YWlscyB8IG51bGwgfTtcclxuXHJcbmV4cG9ydCB0eXBlIE5lYXJieVZhcmlhYmxlc0xhdExuZyA9IHsgbGF0OiBudW1iZXI7IGxuZzogbnVtYmVyOyByYWRpdXM/OiBudW1iZXI7IGNhdGVnb3J5Pzogc3RyaW5nIH07XHJcbmV4cG9ydCB0eXBlIE5lYXJieVZhcmlhYmxlc0dwcyA9IHsgbGF0aXR1ZGU6IG51bWJlcjsgbG9uZ2l0dWRlOiBudW1iZXI7IHJhZGl1cz86IG51bWJlcjsgY2F0ZWdvcnk/OiBzdHJpbmcgfTtcclxuZXhwb3J0IHR5cGUgTmVhcmJ5RGF0YSA9IHsgbmVhcmJ5QnVzaW5lc3NlczogQnVzaW5lc3NbXSB9O1xyXG5cclxuLy8gUXVlcnkgZG9jdW1lbnRzIGV4cG9ydGVkIGZvciB0ZXN0aW5nIHdpdGggTW9ja2VkUHJvdmlkZXJcclxuZXhwb3J0IGNvbnN0IEJVU0lORVNTRVNfUVVFUlkgPSBncWxgXHJcbiAgcXVlcnkgQnVzaW5lc3NlcygkbGltaXQ6IEludCwgJGNhdGVnb3J5OiBTdHJpbmcsICRvZmZzZXQ6IEludCkge1xyXG4gICAgYnVzaW5lc3NlcyhsaW1pdDogJGxpbWl0LCBjYXRlZ29yeTogJGNhdGVnb3J5LCBvZmZzZXQ6ICRvZmZzZXQpIHtcclxuICAgICAgaWRcclxuICAgICAgbmFtZVxyXG4gICAgICBjYXRlZ29yeVxyXG4gIGFkZHJlc3NcclxuICBsYXRpdHVkZVxyXG4gIGxvbmdpdHVkZVxyXG4gIHJhdGluZ1xyXG4gIHByaWNlTGV2ZWxcclxuICBkaXN0YW5jZVxyXG4gIHBsYWNlSWRcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQlVTSU5FU1NfREVUQUlMU19RVUVSWSA9IGdxbGBcclxuICBxdWVyeSBCdXNpbmVzc0RldGFpbHMoJGlkOiBJRCEpIHtcclxuICAgIGJ1c2luZXNzKGlkOiAkaWQpIHtcclxuICAgICAgaWRcclxuICAgICAgbmFtZVxyXG4gIGFkZHJlc3NcclxuICAgICAgcmF0aW5nXHJcbiAgcHJpY2VMZXZlbFxyXG4gIGRpc3RhbmNlXHJcbiAgY2F0ZWdvcnlcclxuICBwbGFjZUlkXHJcbiAgbGF0aXR1ZGVcclxuICBsb25naXR1ZGVcclxuICByZXZpZXdzIHsgaWQgYXV0aG9yIHJhdGluZyB0ZXh0IHRpbWUgfVxyXG4gIHBob3RvcyB7IGlkIHVybCB3aWR0aCBoZWlnaHQgfVxyXG4gIGhvdXJzIHsgbW9uZGF5IHR1ZXNkYXkgd2VkbmVzZGF5IHRodXJzZGF5IGZyaWRheSBzYXR1cmRheSBzdW5kYXkgfVxyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBORUFSQllfQlVTSU5FU1NFU19RVUVSWSA9IGdxbGBcclxuICBxdWVyeSBOZWFyYnlCdXNpbmVzc2VzKCRsYXQ6IEZsb2F0ISwgJGxuZzogRmxvYXQhLCAkcmFkaXVzOiBJbnQsICRjYXRlZ29yeTogU3RyaW5nKSB7XHJcbiAgICBuZWFyYnlCdXNpbmVzc2VzKGxhdDogJGxhdCwgbG5nOiAkbG5nLCByYWRpdXM6ICRyYWRpdXMsIGNhdGVnb3J5OiAkY2F0ZWdvcnkpIHtcclxuICAgICAgaWRcclxuICAgICAgbmFtZVxyXG4gICAgICBkaXN0YW5jZVxyXG4gIGxhdGl0dWRlXHJcbiAgbG9uZ2l0dWRlXHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUJ1c2luZXNzZXNRdWVyeShcclxuICB2YXJpYWJsZXM/OiBCdXNpbmVzc2VzVmFyaWFibGVzXHJcbikge1xyXG4gIC8vIFN0YW5kYXJkIEFwb2xsbyBzaWduYXR1cmU6IHVzZVF1ZXJ5KHF1ZXJ5LCBvcHRpb25zKVxyXG4gIHJldHVybiB1c2VRdWVyeTxCdXNpbmVzc2VzRGF0YSwgQnVzaW5lc3Nlc1ZhcmlhYmxlcz4oQlVTSU5FU1NFU19RVUVSWSwgeyB2YXJpYWJsZXMgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VCdXNpbmVzc0RldGFpbHNRdWVyeShpZE9yVmFyczogc3RyaW5nIHwgQnVzaW5lc3NEZXRhaWxzVmFyaWFibGVzKSB7XHJcbiAgY29uc3QgdmFyaWFibGVzOiBCdXNpbmVzc0RldGFpbHNWYXJpYWJsZXMgPSB0eXBlb2YgaWRPclZhcnMgPT09ICdzdHJpbmcnID8geyBpZDogaWRPclZhcnMgfSA6IGlkT3JWYXJzO1xyXG4gIHJldHVybiB1c2VRdWVyeTxCdXNpbmVzc0RldGFpbHNEYXRhLCBCdXNpbmVzc0RldGFpbHNWYXJpYWJsZXM+KEJVU0lORVNTX0RFVEFJTFNfUVVFUlksIHsgdmFyaWFibGVzLCBza2lwOiAhdmFyaWFibGVzLmlkIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXNlTmVhcmJ5QnVzaW5lc3Nlc1F1ZXJ5KFxyXG4gIHZhcmlhYmxlczogTmVhcmJ5VmFyaWFibGVzTGF0TG5nIHwgTmVhcmJ5VmFyaWFibGVzR3BzXHJcbikge1xyXG4gIGNvbnN0IG5vcm1hbGl6ZWQ6IE5lYXJieVZhcmlhYmxlc0xhdExuZyA9ICdsYXQnIGluIHZhcmlhYmxlc1xyXG4gICAgPyB2YXJpYWJsZXNcclxuICAgIDogeyBsYXQ6IHZhcmlhYmxlcy5sYXRpdHVkZSwgbG5nOiB2YXJpYWJsZXMubG9uZ2l0dWRlLCByYWRpdXM6IHZhcmlhYmxlcy5yYWRpdXMsIGNhdGVnb3J5OiB2YXJpYWJsZXMuY2F0ZWdvcnkgfTtcclxuXHJcbiAgY29uc3QgcmF3ID0gdXNlUXVlcnk8TmVhcmJ5RGF0YSwgTmVhcmJ5VmFyaWFibGVzTGF0TG5nPihORUFSQllfQlVTSU5FU1NFU19RVUVSWSwgeyB2YXJpYWJsZXM6IG5vcm1hbGl6ZWQsIHNraXA6ICFub3JtYWxpemVkLmxhdCB8fCAhbm9ybWFsaXplZC5sbmcgfSk7XHJcblxyXG4gIC8vIFNvcnQgbmVhcmJ5QnVzaW5lc3NlcyBieSBkaXN0YW5jZSBhc2NlbmRpbmcgaWYgcHJlc2VudFxyXG4gIGlmIChyYXcuZGF0YSAmJiBBcnJheS5pc0FycmF5KHJhdy5kYXRhLm5lYXJieUJ1c2luZXNzZXMpKSB7XHJcbiAgICBjb25zdCBkYXRhOiBOZWFyYnlEYXRhID0ge1xyXG4gICAgICAuLi5yYXcuZGF0YSxcclxuICAgICAgbmVhcmJ5QnVzaW5lc3NlczogWy4uLnJhdy5kYXRhLm5lYXJieUJ1c2luZXNzZXNdLnNvcnQoKGE6IEJ1c2luZXNzLCBiOiBCdXNpbmVzcykgPT4gKGEuZGlzdGFuY2UgPz8gMCkgLSAoYi5kaXN0YW5jZSA/PyAwKSksXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHsgLi4ucmF3LCBkYXRhIH0gYXMgdHlwZW9mIHJhdztcclxuICB9XHJcbiAgcmV0dXJuIHJhdztcclxufVxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFELE9BQUE7QUFFQTs7QUFxQ0E7QUFDTyxNQUFNRSxnQkFBZ0IsR0FBQUMsT0FBQSxDQUFBRCxnQkFBQSxHQUFHLElBQUFFLFNBQUc7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFFTSxNQUFNQyxzQkFBc0IsR0FBQUYsT0FBQSxDQUFBRSxzQkFBQSxHQUFHLElBQUFELFNBQUc7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFFTSxNQUFNRSx1QkFBdUIsR0FBQUgsT0FBQSxDQUFBRyx1QkFBQSxHQUFHLElBQUFGLFNBQUc7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUVNLFNBQVNHLGtCQUFrQkEsQ0FDaENDLFNBQStCLEVBQy9CO0VBQ0E7RUFDQSxPQUFPLElBQUFDLGVBQVEsRUFBc0NQLGdCQUFnQixFQUFFO0lBQUVNO0VBQVUsQ0FBQyxDQUFDO0FBQ3ZGO0FBRU8sU0FBU0UsdUJBQXVCQSxDQUFDQyxRQUEyQyxFQUFFO0VBQ25GLE1BQU1ILFNBQW1DLEdBQUcsT0FBT0csUUFBUSxLQUFLLFFBQVEsR0FBRztJQUFFQyxFQUFFLEVBQUVEO0VBQVMsQ0FBQyxHQUFHQSxRQUFRO0VBQ3RHLE9BQU8sSUFBQUYsZUFBUSxFQUFnREosc0JBQXNCLEVBQUU7SUFBRUcsU0FBUztJQUFFSyxJQUFJLEVBQUUsQ0FBQ0wsU0FBUyxDQUFDSTtFQUFHLENBQUMsQ0FBQztBQUM1SDtBQUVPLFNBQVNFLHdCQUF3QkEsQ0FDdENOLFNBQXFELEVBQ3JEO0VBQ0EsTUFBTU8sVUFBaUMsR0FBRyxLQUFLLElBQUlQLFNBQVMsR0FDeERBLFNBQVMsR0FDVDtJQUFFUSxHQUFHLEVBQUVSLFNBQVMsQ0FBQ1MsUUFBUTtJQUFFQyxHQUFHLEVBQUVWLFNBQVMsQ0FBQ1csU0FBUztJQUFFQyxNQUFNLEVBQUVaLFNBQVMsQ0FBQ1ksTUFBTTtJQUFFQyxRQUFRLEVBQUViLFNBQVMsQ0FBQ2E7RUFBUyxDQUFDO0VBRWpILE1BQU1DLEdBQUcsR0FBRyxJQUFBYixlQUFRLEVBQW9DSCx1QkFBdUIsRUFBRTtJQUFFRSxTQUFTLEVBQUVPLFVBQVU7SUFBRUYsSUFBSSxFQUFFLENBQUNFLFVBQVUsQ0FBQ0MsR0FBRyxJQUFJLENBQUNELFVBQVUsQ0FBQ0c7RUFBSSxDQUFDLENBQUM7O0VBRXJKO0VBQ0EsSUFBSUksR0FBRyxDQUFDQyxJQUFJLElBQUlDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSCxHQUFHLENBQUNDLElBQUksQ0FBQ0csZ0JBQWdCLENBQUMsRUFBRTtJQUN4RCxNQUFNSCxJQUFnQixHQUFHO01BQ3ZCLEdBQUdELEdBQUcsQ0FBQ0MsSUFBSTtNQUNYRyxnQkFBZ0IsRUFBRSxDQUFDLEdBQUdKLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDRyxnQkFBZ0IsQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBQ0MsQ0FBVyxFQUFFQyxDQUFXLEtBQUssQ0FBQ0QsQ0FBQyxDQUFDRSxRQUFRLElBQUksQ0FBQyxLQUFLRCxDQUFDLENBQUNDLFFBQVEsSUFBSSxDQUFDLENBQUM7SUFDM0gsQ0FBQztJQUNELE9BQU87TUFBRSxHQUFHUixHQUFHO01BQUVDO0lBQUssQ0FBQztFQUN6QjtFQUNBLE9BQU9ELEdBQUc7QUFDWiIsImlnbm9yZUxpc3QiOltdfQ==