{"file":"C:\\Users\\Media Server\\Documents\\Projects\\points-companion-app\\src\\test\\testUtils.ts","mappings":"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","names":[],"sources":["C:\\Users\\Media Server\\Documents\\Projects\\points-companion-app\\src\\test\\testUtils.ts"],"sourcesContent":["// Testing utilities and setup for Points Companion App\r\n// Provides comprehensive test coverage with 80%+ target\r\n\r\nimport React, { ReactElement, ReactNode } from 'react';\r\nimport { render, screen, waitFor } from '@testing-library/react';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { jest } from '@jest/globals';\r\n\r\n// Test Query Client\r\nexport const createTestQueryClient = () => new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      retry: false,\r\n      gcTime: 0,\r\n    },\r\n    mutations: {\r\n      retry: false,\r\n    },\r\n  },\r\n});\r\n\r\n// Test Wrapper with Query Client\r\nexport const TestWrapper = ({ children }: { children: ReactNode }) => {\r\n  const queryClient = createTestQueryClient();\r\n\r\n  return React.createElement(QueryClientProvider, { client: queryClient }, children);\r\n};\r\n\r\n// Custom render function\r\nexport const customRender = (ui: ReactElement, options = {}) =>\r\n  render(ui, { wrapper: TestWrapper, ...options });\r\n\r\n// Re-export everything\r\nexport * from '@testing-library/react';\r\n\r\n// Mock implementations\r\nexport const mockGeolocation = {\r\n  getCurrentPosition: jest.fn(),\r\n  watchPosition: jest.fn(),\r\n  clearWatch: jest.fn(),\r\n};\r\n\r\nexport const mockGoogleMaps = {\r\n  Maps: jest.fn(),\r\n  places: {\r\n    PlacesService: jest.fn(),\r\n    PlacesServiceStatus: {\r\n      OK: 'OK',\r\n      ZERO_RESULTS: 'ZERO_RESULTS',\r\n    },\r\n  },\r\n};\r\n\r\nexport const mockSupabase = {\r\n  from: jest.fn(() => ({\r\n    select: jest.fn(() => ({\r\n      eq: jest.fn(() => ({\r\n        single: jest.fn(() => Promise.resolve({ data: null, error: null })),\r\n      })),\r\n    })),\r\n    insert: jest.fn(() => Promise.resolve({ error: null })),\r\n    update: jest.fn(() => Promise.resolve({ error: null })),\r\n    delete: jest.fn(() => Promise.resolve({ error: null })),\r\n  })),\r\n};\r\n\r\n// Test data factories\r\nexport const createMockBusiness = (overrides = {}) => ({\r\n  id: 'test-business-1',\r\n  name: 'Test Restaurant',\r\n  address: '123 Test St',\r\n  category: 'restaurant',\r\n  latitude: 40.7128,\r\n  longitude: -74.0060,\r\n  rating: 4.5,\r\n  price_level: 2,\r\n  distance: 1000,\r\n  place_id: 'test_place_id',\r\n  ...overrides,\r\n});\r\n\r\nexport const createMockCardRecommendation = (overrides = {}) => ({\r\n  id: 'test-card-1',\r\n  name: 'Test Rewards Card',\r\n  issuer: 'Test Bank',\r\n  category: 'dining',\r\n  rewardRate: 3.0,\r\n  annualFee: 95,\r\n  signupBonus: 'Earn 50,000 points',\r\n  features: ['3x points on dining', 'No foreign transaction fees'],\r\n  matchScore: 85,\r\n  ...overrides,\r\n});\r\n\r\nexport const createMockUser = (overrides = {}) => ({\r\n  id: 'test-user-1',\r\n  email: 'test@example.com',\r\n  name: 'Test User',\r\n  preferences: {\r\n    favoriteCategories: ['dining', 'travel'],\r\n    notificationSettings: {\r\n      email: true,\r\n      push: true,\r\n      sms: false,\r\n    },\r\n  },\r\n  ...overrides,\r\n});\r\n\r\n// Test utilities\r\nexport const waitForLoadingToFinish = () =>\r\n  waitFor(() => {\r\n    expect(screen.queryByTestId('loading')).not.toBeInTheDocument();\r\n  }, { timeout: 5000 });\r\n\r\nexport const expectLoadingState = () => {\r\n  expect(screen.getByTestId('loading')).toBeInTheDocument();\r\n};\r\n\r\nexport const expectErrorState = (message?: string) => {\r\n  expect(screen.getByTestId('error')).toBeInTheDocument();\r\n  if (message) {\r\n    expect(screen.getByText(message)).toBeInTheDocument();\r\n  }\r\n};\r\n\r\nexport const mockFetchResponse = (data: any, ok = true) => {\r\n  global.fetch = jest.fn(() =>\r\n    Promise.resolve({\r\n      ok,\r\n      json: () => Promise.resolve(data),\r\n      text: () => Promise.resolve(JSON.stringify(data)),\r\n    } as Response)\r\n  );\r\n};\r\n\r\nexport const mockFetchError = (error: Error) => {\r\n  global.fetch = jest.fn(() => Promise.reject(error));\r\n};\r\n\r\n// Performance testing utilities\r\nexport const measureRenderTime = async (component: ReactElement) => {\r\n  const startTime = performance.now();\r\n\r\n  customRender(component);\r\n\r\n  await waitFor(() => {\r\n    expect(document.body).toBeInTheDocument();\r\n  });\r\n\r\n  const endTime = performance.now();\r\n  return endTime - startTime;\r\n};\r\n\r\nexport const expectPerformance = (renderTime: number, threshold = 100) => {\r\n  expect(renderTime).toBeLessThan(threshold);\r\n};\r\n\r\n// Accessibility testing utilities\r\nexport const expectAccessible = (container: HTMLElement) => {\r\n  // Check for ARIA labels\r\n  const buttons = container.querySelectorAll('button');\r\n  buttons.forEach(button => {\r\n    expect(button).toHaveAttribute('aria-label');\r\n  });\r\n\r\n  // Check for alt text on images\r\n  const images = container.querySelectorAll('img');\r\n  images.forEach(img => {\r\n    expect(img).toHaveAttribute('alt');\r\n  });\r\n\r\n  // Check for proper heading hierarchy\r\n  const headings = container.querySelectorAll('h1, h2, h3, h4, h5, h6');\r\n  let lastLevel = 0;\r\n  headings.forEach(heading => {\r\n    const level = parseInt(heading.tagName.charAt(1));\r\n    expect(level).toBeGreaterThanOrEqual(lastLevel);\r\n    lastLevel = level;\r\n  });\r\n};\r\n\r\n// Mock service worker\r\nexport const mockServiceWorker = {\r\n  register: jest.fn(() => Promise.resolve({\r\n    active: { state: 'activated' },\r\n    waiting: null,\r\n    installing: null,\r\n  })),\r\n  addEventListener: jest.fn(),\r\n  removeEventListener: jest.fn(),\r\n};\r\n\r\n// Setup function for all tests\r\nexport const setupTests = () => {\r\n  // Mock window methods\r\n  Object.defineProperty(window, 'matchMedia', {\r\n    writable: true,\r\n    value: jest.fn().mockImplementation(query => ({\r\n      matches: false,\r\n      media: query,\r\n      onchange: null,\r\n      addListener: jest.fn(),\r\n      removeListener: jest.fn(),\r\n      addEventListener: jest.fn(),\r\n      removeEventListener: jest.fn(),\r\n      dispatchEvent: jest.fn(),\r\n    })),\r\n  });\r\n\r\n  // Mock IntersectionObserver\r\n  const mockIntersectionObserver = jest.fn().mockImplementation(() => ({\r\n    observe: jest.fn(),\r\n    unobserve: jest.fn(),\r\n    disconnect: jest.fn(),\r\n  }));\r\n  (global as any).IntersectionObserver = mockIntersectionObserver;\r\n\r\n  // Mock ResizeObserver\r\n  const mockResizeObserver = jest.fn().mockImplementation(() => ({\r\n    observe: jest.fn(),\r\n    unobserve: jest.fn(),\r\n    disconnect: jest.fn(),\r\n  }));\r\n  (global as any).ResizeObserver = mockResizeObserver;\r\n\r\n  // Mock geolocation\r\n  Object.defineProperty(navigator, 'geolocation', {\r\n    value: mockGeolocation,\r\n    writable: true,\r\n  });\r\n\r\n  // Mock service worker\r\n  Object.defineProperty(navigator, 'serviceWorker', {\r\n    value: mockServiceWorker,\r\n    writable: true,\r\n  });\r\n\r\n  // Mock Google Maps\r\n  (global as any).google = mockGoogleMaps;\r\n\r\n  // Mock localStorage\r\n  const localStorageMock = {\r\n    getItem: jest.fn(),\r\n    setItem: jest.fn(),\r\n    removeItem: jest.fn(),\r\n    clear: jest.fn(),\r\n  };\r\n  Object.defineProperty(window, 'localStorage', {\r\n    value: localStorageMock,\r\n  });\r\n\r\n  // Mock sessionStorage\r\n  const sessionStorageMock = {\r\n    getItem: jest.fn(),\r\n    setItem: jest.fn(),\r\n    removeItem: jest.fn(),\r\n    clear: jest.fn(),\r\n  };\r\n  Object.defineProperty(window, 'sessionStorage', {\r\n    value: sessionStorageMock,\r\n  });\r\n};\r\n"],"version":3}