d555fdfde5020eb3cf64cbae8cfcce15
"use strict";

exports.__esModule = true;
exports.NEARBY_BUSINESSES_QUERY = exports.BUSINESS_DETAILS_QUERY = exports.BUSINESSES_QUERY = void 0;
exports.useBusinessDetailsQuery = useBusinessDetailsQuery;
exports.useBusinessesQuery = useBusinessesQuery;
exports.useNearbyBusinessesQuery = useNearbyBusinessesQuery;
var Apollo = _interopRequireWildcard(require("@apollo/client"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
// Query documents exported for testing with MockedProvider
const BUSINESSES_QUERY = exports.BUSINESSES_QUERY = Apollo.gql`
  query Businesses($limit: Int, $category: String) {
    businesses(limit: $limit, category: $category) {
      id
      name
      category
    }
  }
`;
const BUSINESS_DETAILS_QUERY = exports.BUSINESS_DETAILS_QUERY = Apollo.gql`
  query BusinessDetails($id: ID!) {
    business(id: $id) {
      id
      name
      description
      rating
    }
  }
`;
const NEARBY_BUSINESSES_QUERY = exports.NEARBY_BUSINESSES_QUERY = Apollo.gql`
  query NearbyBusinesses($lat: Float!, $lng: Float!, $radius: Int) {
    nearbyBusinesses(lat: $lat, lng: $lng, radius: $radius) {
      id
      name
      distance
    }
  }
`;
function useBusinessesQuery(variables) {
  // Standard Apollo signature: useQuery(query, options)
  return Apollo.useQuery(BUSINESSES_QUERY, {
    variables
  });
}
function useBusinessDetailsQuery(idOrVars) {
  const variables = typeof idOrVars === 'string' ? {
    id: idOrVars
  } : idOrVars;
  return Apollo.useQuery(BUSINESS_DETAILS_QUERY, {
    variables,
    skip: !variables?.id
  });
}
function useNearbyBusinessesQuery(variables) {
  const normalized = 'lat' in variables ? variables : {
    lat: variables.latitude,
    lng: variables.longitude,
    radius: variables.radius,
    category: variables.category
  };
  const raw = Apollo.useQuery(NEARBY_BUSINESSES_QUERY, {
    variables: normalized,
    skip: !normalized?.lat || !normalized?.lng
  });

  // Sort nearbyBusinesses by distance ascending if present
  const sorted = raw && raw.data && Array.isArray(raw.data.nearbyBusinesses) ? {
    ...raw,
    data: {
      ...raw.data,
      nearbyBusinesses: [...raw.data.nearbyBusinesses].sort((a, b) => (a?.distance ?? 0) - (b?.distance ?? 0))
    }
  } : raw;
  return sorted;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBcG9sbG8iLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJCVVNJTkVTU0VTX1FVRVJZIiwiZXhwb3J0cyIsImdxbCIsIkJVU0lORVNTX0RFVEFJTFNfUVVFUlkiLCJORUFSQllfQlVTSU5FU1NFU19RVUVSWSIsInVzZUJ1c2luZXNzZXNRdWVyeSIsInZhcmlhYmxlcyIsInVzZVF1ZXJ5IiwidXNlQnVzaW5lc3NEZXRhaWxzUXVlcnkiLCJpZE9yVmFycyIsImlkIiwic2tpcCIsInVzZU5lYXJieUJ1c2luZXNzZXNRdWVyeSIsIm5vcm1hbGl6ZWQiLCJsYXQiLCJsYXRpdHVkZSIsImxuZyIsImxvbmdpdHVkZSIsInJhZGl1cyIsImNhdGVnb3J5IiwicmF3Iiwic29ydGVkIiwiZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsIm5lYXJieUJ1c2luZXNzZXMiLCJzb3J0IiwiYSIsImIiLCJkaXN0YW5jZSJdLCJzb3VyY2VzIjpbInVzZUdyYXBoUUwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQXBvbGxvIGZyb20gJ0BhcG9sbG8vY2xpZW50JztcclxuXHJcbi8vIFF1ZXJ5IGRvY3VtZW50cyBleHBvcnRlZCBmb3IgdGVzdGluZyB3aXRoIE1vY2tlZFByb3ZpZGVyXHJcbmV4cG9ydCBjb25zdCBCVVNJTkVTU0VTX1FVRVJZID0gQXBvbGxvLmdxbGBcclxuICBxdWVyeSBCdXNpbmVzc2VzKCRsaW1pdDogSW50LCAkY2F0ZWdvcnk6IFN0cmluZykge1xyXG4gICAgYnVzaW5lc3NlcyhsaW1pdDogJGxpbWl0LCBjYXRlZ29yeTogJGNhdGVnb3J5KSB7XHJcbiAgICAgIGlkXHJcbiAgICAgIG5hbWVcclxuICAgICAgY2F0ZWdvcnlcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQlVTSU5FU1NfREVUQUlMU19RVUVSWSA9IEFwb2xsby5ncWxgXHJcbiAgcXVlcnkgQnVzaW5lc3NEZXRhaWxzKCRpZDogSUQhKSB7XHJcbiAgICBidXNpbmVzcyhpZDogJGlkKSB7XHJcbiAgICAgIGlkXHJcbiAgICAgIG5hbWVcclxuICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgcmF0aW5nXHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IE5FQVJCWV9CVVNJTkVTU0VTX1FVRVJZID0gQXBvbGxvLmdxbGBcclxuICBxdWVyeSBOZWFyYnlCdXNpbmVzc2VzKCRsYXQ6IEZsb2F0ISwgJGxuZzogRmxvYXQhLCAkcmFkaXVzOiBJbnQpIHtcclxuICAgIG5lYXJieUJ1c2luZXNzZXMobGF0OiAkbGF0LCBsbmc6ICRsbmcsIHJhZGl1czogJHJhZGl1cykge1xyXG4gICAgICBpZFxyXG4gICAgICBuYW1lXHJcbiAgICAgIGRpc3RhbmNlXHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUJ1c2luZXNzZXNRdWVyeShcclxuICB2YXJpYWJsZXM/OiB7IGxpbWl0PzogbnVtYmVyOyBjYXRlZ29yeT86IHN0cmluZzsgb2Zmc2V0PzogbnVtYmVyIH1cclxuKSB7XHJcbiAgLy8gU3RhbmRhcmQgQXBvbGxvIHNpZ25hdHVyZTogdXNlUXVlcnkocXVlcnksIG9wdGlvbnMpXHJcbiAgcmV0dXJuIChBcG9sbG8gYXMgYW55KS51c2VRdWVyeShCVVNJTkVTU0VTX1FVRVJZLCB7IHZhcmlhYmxlcyB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUJ1c2luZXNzRGV0YWlsc1F1ZXJ5KGlkT3JWYXJzOiBzdHJpbmcgfCB7IGlkOiBzdHJpbmcgfSkge1xyXG4gIGNvbnN0IHZhcmlhYmxlcyA9IHR5cGVvZiBpZE9yVmFycyA9PT0gJ3N0cmluZycgPyB7IGlkOiBpZE9yVmFycyB9IDogaWRPclZhcnM7XHJcbiAgcmV0dXJuIChBcG9sbG8gYXMgYW55KS51c2VRdWVyeShCVVNJTkVTU19ERVRBSUxTX1FVRVJZLCB7IHZhcmlhYmxlcywgc2tpcDogIXZhcmlhYmxlcz8uaWQgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VOZWFyYnlCdXNpbmVzc2VzUXVlcnkoXHJcbiAgdmFyaWFibGVzOlxyXG4gICAgfCB7IGxhdDogbnVtYmVyOyBsbmc6IG51bWJlcjsgcmFkaXVzPzogbnVtYmVyOyBjYXRlZ29yeT86IHN0cmluZyB9XHJcbiAgICB8IHsgbGF0aXR1ZGU6IG51bWJlcjsgbG9uZ2l0dWRlOiBudW1iZXI7IHJhZGl1cz86IG51bWJlcjsgY2F0ZWdvcnk/OiBzdHJpbmcgfVxyXG4pIHtcclxuICBjb25zdCBub3JtYWxpemVkID0gJ2xhdCcgaW4gdmFyaWFibGVzXHJcbiAgICA/IHZhcmlhYmxlc1xyXG4gICAgOiB7IGxhdDogKHZhcmlhYmxlcyBhcyBhbnkpLmxhdGl0dWRlLCBsbmc6ICh2YXJpYWJsZXMgYXMgYW55KS5sb25naXR1ZGUsIHJhZGl1czogKHZhcmlhYmxlcyBhcyBhbnkpLnJhZGl1cywgY2F0ZWdvcnk6ICh2YXJpYWJsZXMgYXMgYW55KS5jYXRlZ29yeSB9O1xyXG5cclxuICBjb25zdCByYXcgPSAoQXBvbGxvIGFzIGFueSkudXNlUXVlcnkoTkVBUkJZX0JVU0lORVNTRVNfUVVFUlksIHsgdmFyaWFibGVzOiBub3JtYWxpemVkLCBza2lwOiAhbm9ybWFsaXplZD8ubGF0IHx8ICFub3JtYWxpemVkPy5sbmcgfSk7XHJcblxyXG4gIC8vIFNvcnQgbmVhcmJ5QnVzaW5lc3NlcyBieSBkaXN0YW5jZSBhc2NlbmRpbmcgaWYgcHJlc2VudFxyXG4gIGNvbnN0IHNvcnRlZCA9IHJhdyAmJiByYXcuZGF0YSAmJiBBcnJheS5pc0FycmF5KHJhdy5kYXRhLm5lYXJieUJ1c2luZXNzZXMpXHJcbiAgICA/IHtcclxuICAgICAgICAuLi5yYXcsXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgLi4ucmF3LmRhdGEsXHJcbiAgICAgICAgICBuZWFyYnlCdXNpbmVzc2VzOiBbLi4ucmF3LmRhdGEubmVhcmJ5QnVzaW5lc3Nlc10uc29ydCgoYTogYW55LCBiOiBhbnkpID0+IChhPy5kaXN0YW5jZSA/PyAwKSAtIChiPy5kaXN0YW5jZSA/PyAwKSlcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIDogcmF3O1xyXG4gIHJldHVybiBzb3J0ZWQ7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQXlDLFNBQUFELHdCQUFBRSxDQUFBLEVBQUFDLENBQUEsNkJBQUFDLE9BQUEsTUFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBSix1QkFBQSxZQUFBQSxDQUFBRSxDQUFBLEVBQUFDLENBQUEsU0FBQUEsQ0FBQSxJQUFBRCxDQUFBLElBQUFBLENBQUEsQ0FBQUssVUFBQSxTQUFBTCxDQUFBLE1BQUFNLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLEtBQUFDLFNBQUEsUUFBQUMsT0FBQSxFQUFBVixDQUFBLGlCQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFNBQUFRLENBQUEsTUFBQUYsQ0FBQSxHQUFBTCxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxRQUFBRyxDQUFBLENBQUFLLEdBQUEsQ0FBQVgsQ0FBQSxVQUFBTSxDQUFBLENBQUFNLEdBQUEsQ0FBQVosQ0FBQSxHQUFBTSxDQUFBLENBQUFPLEdBQUEsQ0FBQWIsQ0FBQSxFQUFBUSxDQUFBLGdCQUFBUCxDQUFBLElBQUFELENBQUEsZ0JBQUFDLENBQUEsT0FBQWEsY0FBQSxDQUFBQyxJQUFBLENBQUFmLENBQUEsRUFBQUMsQ0FBQSxPQUFBTSxDQUFBLElBQUFELENBQUEsR0FB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